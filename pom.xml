<?xml version="1.0" encoding="UTF-8"?>
<!--
  DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.

  Copyright (c) 2022-2025 Payara Foundation and/or its affiliates. All rights reserved.

  The contents of this file are subject to the terms of either the GNU
  General Public License Version 2 only ("GPL") or the Common Development
  and Distribution License("CDDL") (collectively, the "License").  You
  may not use this file except in compliance with the License.  You can
  obtain a copy of the License at
  https://github.com/payara/Payara/blob/master/LICENSE.txt
  See the License for the specific
  language governing permissions and limitations under the License.

  When distributing the software, include this License Header Notice in each
  file and include the License file at glassfish/legal/LICENSE.txt.

  GPL Classpath Exception:
  The Payara Foundation designates this particular file as subject to the "Classpath"
  exception as provided by the Payara Foundation in the GPL Version 2 section of the License
  file that accompanied this code.

  Modifications:
  If applicable, add the following below the License Header, with the fields
  enclosed by brackets [] replaced by your own identifying information:
  "Portions Copyright [year] [name of copyright owner]"

  Contributor(s):
  If you wish your version of this file to be governed by only the CDDL or
  only the GPL Version 2, indicate your decision by adding "[Contributor]
  elects to include this software in this distribution under the [CDDL or GPL
  Version 2] license."  If you don't indicate a single choice of license, a
  recipient has the option to distribute your version of this file under
  either the CDDL, the GPL Version 2 or to extend the choice of license to
  its licensees as provided above.  However, if you add GPL Version 2 code
  and therefore, elected the GPL Version 2 license, then the option applies
  only if the new code is made subject to such option by the copyright
  holder.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>fish.payara.jakarta.tests.tck</groupId>
    <artifactId>tck</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>pom</packaging>
    
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <maven.compiler.source>21</maven.compiler.source>
        <maven.compiler.target>21</maven.compiler.target>
        <maven.compiler.release>21</maven.compiler.release>

        <jdk.version>21</jdk.version>

        <commons-codec.version>1.18.0</commons-codec.version>

        <ant.version>1.10.15</ant.version>
        <ant.home>${project.build.directory}/apache-ant-${ant.version}</ant.home>
        <ant.zip.url>https://archive.apache.org/dist/ant/binaries/apache-ant-${ant.version}-bin.zip</ant.zip.url>
        <ant.executable>${ant.home}${file.separator}bin${file.separator}ant</ant.executable>
        <maven.executable>${maven.home}${file.separator}bin${file.separator}mvn</maven.executable>
        <maven.settings.xml>${user.home}${file.separator}.m2${file.separator}settings.xml</maven.settings.xml>

        <payara.home>${maven.multiModuleProjectDirectory}${file.separator}target${file.separator}payara7</payara.home>
        <!-- Note that Shrinkwrap Maven resolver WILL NOT read in whatever you specify on the command line - it will ALWAYS read this as-is -->
        <payara.version>7.2025.1.Alpha3-SNAPSHOT</payara.version>
        <script.extension/>
        <executable.extension/>
        <root.tmp.directory/>
        <path.separator>:</path.separator>
        <payara.asadmin>${payara.home}${file.separator}glassfish${file.separator}bin${file.separator}asadmin${script.extension}</payara.asadmin>
        <payara.artifact>payara</payara.artifact>
        <payara.domain>domain1</payara.domain>
        <payara.arquillian.version>4.0.alpha2</payara.arquillian.version>
        <skipTests>false</skipTests>
        <skipConfig>${skipTests}</skipConfig>
        <skipServerStartStop>${skipTests}</skipServerStartStop>

        <!-- Build & test plugin versions -->
        <maven-install-plugin.version>3.1.2</maven-install-plugin.version>
        <maven-failsafe-plugin.version>3.5.3</maven-failsafe-plugin.version>
        <maven-surefire-plugin.version>3.3.1</maven-surefire-plugin.version>
        <maven-surefire-report-plugin.version>3.5.0</maven-surefire-report-plugin.version>
        <maven-dependency-plugin.version>3.7.1</maven-dependency-plugin.version>
        <maven-enforcer-plugin.version>3.5.0</maven-enforcer-plugin.version>
        <maven-antrun-plugin.version>3.1.0</maven-antrun-plugin.version>
        <maven-compiler-plugin.version>3.13.0</maven-compiler-plugin.version>
        <maven-jar-plugin.version>3.4.2</maven-jar-plugin.version>
        <maven-resources-plugin.version>3.3.1</maven-resources-plugin.version>
        <exec-maven-plugin.version>3.3.0</exec-maven-plugin.version>
        <download-maven-plugin.version>1.9.0</download-maven-plugin.version>
        <arquillian.version>1.9.3.Final</arquillian.version>
        <junit.version>5.11.4</junit.version>
        <jimage.dir>${project.build.directory}${file.separator}jdk-bundle</jimage.dir>
        <shrinkwrap.resolver.version>3.3.4</shrinkwrap.resolver.version>
        <shrinkwrap.descriptors.version>2.0.0</shrinkwrap.descriptors.version>
        <sql-maven-plugin.version>3.0.0</sql-maven-plugin.version>

        <!-- Derby DB properties -->
        <derby.version>10.17.1.0</derby.version>
        <derby.zip.url>https://dlcdn.apache.org//db/derby/db-derby-${derby.version}/db-derby-${derby.version}-bin.zip</derby.zip.url>
        <db.download.location>${project.build.directory}${file.separator}db-derby-${derby.version}-bin</db.download.location>
        <payara.db.home>${payara.home}${file.separator}javadb</payara.db.home>

        <!-- Jakarta EE versions -->
        <jakarta-annotations-tck.version>3.0.0</jakarta-annotations-tck.version>
        <jakarta-authorization-tck.version>3.0.0</jakarta-authorization-tck.version>
        <jakarta-mail-platform-tck.version>2.1.0</jakarta-mail-platform-tck.version>
        <jakarta-rest-tck.version>4.0.0</jakarta-rest-tck.version>
        <jakarta.tck.sigtest-maven-plugin.version>2.6</jakarta.tck.sigtest-maven-plugin.version>
        <jakarta.tck.el.version>6.0.0</jakarta.tck.el.version>
        <jakarta.tck.websocket.version>2.2.0</jakarta.tck.websocket.version>
        <jakarta.tck.bean-validation.version>3.1.1</jakarta.tck.bean-validation.version>
        <jakarta.tck.ws.rs.version>4.0.0</jakarta.tck.ws.rs.version>
        <jakarta.tck.pages.version>4.0.0</jakarta.tck.pages.version>
        <jakarta.tck.common.version>11.1.0</jakarta.tck.common.version>
        <jakarta.tck.signaturetest.version>11.1.0</jakarta.tck.signaturetest.version>
        <jakarta.tck.arquillian.version>11.1.0</jakarta.tck.arquillian.version>
        <jakarta.tck.persistence.version>3.2.0</jakarta.tck.persistence.version>
        <jakarta.tck.cdi.version>4.1.0</jakarta.tck.cdi.version>
        <cdi.api.version>4.1.0</cdi.api.version>
        <jakarta.tck.servlet.version>6.1.0</jakarta.tck.servlet.version>
        <jakarta.tck.concurrency.version>3.1.1</jakarta.tck.concurrency.version>
        <jakarta.tck.jsonp.version>2.1.1</jakarta.tck.jsonp.version>
        <jakarta.tck.jsonb.version>3.0.0</jakarta.tck.jsonb.version>
        <jakarta.tck.batch.version>2.1.5</jakarta.tck.batch.version>
        <jakarta.tck.platform.version>11.0.1</jakarta.tck.platform.version>
        <jakarta.tck.core-profile.version>11.0.0</jakarta.tck.core-profile.version>
        <jakarta.tck.inject.version>2.0.2</jakarta.tck.inject.version>
        <jakarta-authentication-tck.version>3.1.0</jakarta-authentication-tck.version>
        <jakarta.tck.data.version>1.0.1</jakarta.tck.data.version>
        <jakarta.tck.jms.version>3.1.0</jakarta.tck.jms.version>
        <!-- If updating this Faces TCK version - please also update the replacement poms we use under faces-tck -->
        <jakarta.tck.faces.version>4.1.1</jakarta.tck.faces.version>
        <jakarta.tck.transaction.version>2.0.1</jakarta.tck.transaction.version>
        <jakarta.tck.resource.version>2.1.0</jakarta.tck.resource.version>
        <jms-tck.version>11.0.0-payara</jms-tck.version>

        <!-- The profile to run - acceptable parameters are 'full', 'web', and 'core' -->
        <jakarta.tck.platform>full</jakarta.tck.platform>
        <jakarta.javatest.group>tck-javatest</jakarta.javatest.group>
        <javaee.level>${jakarta.tck.platform}</javaee.level>
    </properties>

    <repositories>
        <!-- Try Maven central first, not last, which happens when omitted here -->
        <repository>
            <id>central</id>
            <name>Central Repository</name>
            <url>https://repo.maven.apache.org/maven2</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>payara-nexus-artifacts</id>
            <url>https://nexus.dev.payara.fish/repository/payara-artifacts</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>payara-nexus-snapshots</id>
            <url>https://nexus.dev.payara.fish/repository/payara-snapshots</url>
            <releases>
                <enabled>false</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>payara-nexus-enterprise-artifacts</id>
            <url>https://nexus.dev.payara.fish/repository/payara-enterprise-artifacts-private</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>payara-nexus-enterprise-snapshots</id>
            <url>https://nexus.dev.payara.fish/repository/payara-enterprise-snapshots-private</url>
            <releases>
                <enabled>false</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>payara-nexus-enterprise-distributions</id>
            <url>https://nexus.dev.payara.fish/repository/payara-enterprise</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
    </repositories>

    <pluginRepositories>
        <!-- Try Maven central first, not last, which happens when omitted here -->
        <pluginRepository>
            <id>central</id>
            <name>Central Repository</name>
            <url>https://repo.maven.apache.org/maven2</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </pluginRepository>
    </pluginRepositories>

    <modules>
        <!-- 'tck-download' module at the top to ensure it resolves first -->
        <module>tck-download</module>
        <module>activation-tck</module>
        <module>annotations-tck</module>
        <module>authentication-tck</module>
        <module>authorization-tck</module>
        <module>batch-tck</module>
        <module>cdi-langmodel-tck</module>
        <module>cdi-platform-tck</module>
        <module>cdi-tck</module>
        <module>concurrent-tck</module>
        <module>core-tck</module>
        <module>faces-tck</module>
        <module>inject-tck</module>
        <module>jsonb-tck</module>
        <module>jsonb-platform-tck</module>
        <module>jsonp-tck</module>
        <module>jsonp-platform-tck</module>
        <module>pages-tck</module>
        <module>rest-tck</module>
        <module>servlet-tck</module>
        <module>tags-tck</module>
        <module>websocket-tck</module>
        <module>summarizer</module>
        <module>expression-language-tck</module>
        <module>bean-validation-tck</module>
        <module>persistence-tck</module>
        <module>messaging-tck</module>
        <module>messaging-platform-tck</module>
        <module>mail-platform-tck</module>
        <module>data-tck</module>
        <module>expression-language-platform-tck</module>
        <module>pages-platform-tck</module>
        <module>ejb-platform-tck</module>
        <module>dsol-platform-tck</module>
        <module>jdbc-platform-tck</module>
        <module>rest-platform-tck</module>
        <module>persistence-platform-tck</module>
        <module>transaction-platform-tck</module>
        <module>websocket-platform-tck</module>
        <module>connector-platform-tck</module>
        <module>assembly-platform-tck</module>
        <module>integration-platform-tck</module>
        <module>xa-platform-tck</module>
        <module>javaee-module-tck</module>
    </modules>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.jboss.arquillian</groupId>
                <artifactId>arquillian-bom</artifactId>
                <version>${arquillian.version}</version>
                <scope>import</scope>
                <type>pom</type>
            </dependency>
            <dependency>
                <groupId>org.jboss.shrinkwrap.resolver</groupId>
                <artifactId>shrinkwrap-resolver-bom</artifactId>
                <version>${shrinkwrap.resolver.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.jboss.shrinkwrap.descriptors</groupId>
                <artifactId>shrinkwrap-descriptors-bom</artifactId>
                <version>${shrinkwrap.descriptors.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <dependency>
                <groupId>org.junit</groupId>
                <artifactId>junit-bom</artifactId>
                <version>${junit.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <dependency>
                <groupId>jakarta.tck</groupId>
                <artifactId>sigtest-maven-plugin</artifactId>
                <version>${jakarta.tck.sigtest-maven-plugin.version}</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>fish.payara.distributions</groupId>
                <artifactId>payara</artifactId>
                <version>${payara.version}</version>
                <type>zip</type>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>fish.payara.distributions</groupId>
                <artifactId>payara-web</artifactId>
                <version>${payara.version}</version>
                <type>zip</type>
                <scope>test</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-dependency-plugin</artifactId>
                    <version>${maven-dependency-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-failsafe-plugin</artifactId>
                    <version>${maven-failsafe-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-install-plugin</artifactId>
                    <version>${maven-install-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>com.googlecode.maven-download-plugin</groupId>
                    <artifactId>download-maven-plugin</artifactId>
                    <version>${download-maven-plugin.version}</version>
                </plugin>

                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>exec-maven-plugin</artifactId>
                    <version>${exec-maven-plugin.version}</version>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-enforcer-plugin</artifactId>
                    <version>${maven-enforcer-plugin.version}</version>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-antrun-plugin</artifactId>
                    <version>${maven-antrun-plugin.version}</version>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>${maven-surefire-plugin.version}</version>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-report-plugin</artifactId>
                    <version>${maven-surefire-report-plugin.version}</version>
                </plugin>

                <plugin>
                    <groupId>jakarta.tck</groupId>
                    <artifactId>sigtest-maven-plugin</artifactId>
                    <version>${jakarta.tck.sigtest-maven-plugin.version}</version>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>${maven-compiler-plugin.version}</version>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>${maven-jar-plugin.version}</version>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>${maven-resources-plugin.version}</version>
                </plugin>

                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>sql-maven-plugin</artifactId>
                    <version>${sql-maven-plugin.version}</version>
                </plugin>
            </plugins>
        </pluginManagement>

        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
                <executions>
                    <execution>
                        <id>enforce-versions</id>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <requireJavaVersion>
                                    <version>[${jdk.version},)</version>
                                    <message>You need at least JDK21</message>
                                </requireJavaVersion>
                            </rules>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>web</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>

            <properties>
                <payara.artifact>payara-web</payara.artifact>
                <jakarta.tck.platform>web</jakarta.tck.platform>
                <jakarta.javatest.group>web</jakarta.javatest.group>
            </properties>
        </profile>
        <profile>
            <id>jakarta-staging</id>
            <repositories>
                <repository>
                    <id>jakarta-staging</id>
                    <url>https://jakarta.oss.sonatype.org/content/groups/staging/</url>
                    <releases>
                        <enabled>true</enabled>
                    </releases>
                    <snapshots>
                        <enabled>true</enabled>
                    </snapshots>
                </repository>
            </repositories>
            <pluginRepositories>
                <pluginRepository>
                    <id>jakarta-staging</id>
                    <url>https://jakarta.oss.sonatype.org/content/groups/staging/</url>
                    <releases>
                        <enabled>true</enabled>
                    </releases>
                    <snapshots>
                        <enabled>true</enabled>
                    </snapshots>
                </pluginRepository>
            </pluginRepositories>
        </profile>

        <profile>
            <id>payara-server-remote</id>

            <properties>
                <payara.server.remote/>
                <skipServerStartStop>true</skipServerStartStop>
            </properties>

            <dependencies>
                <dependency>
                    <groupId>fish.payara.arquillian</groupId>
                    <artifactId>arquillian-payara-server-remote</artifactId>
                    <version>${payara.arquillian.version}</version>
                    <scope>test</scope>
                </dependency>
            </dependencies>
        </profile>

        <profile>
            <id>payara-server-managed</id>

            <properties>
                <payara.server.managed/>
            </properties>

            <dependencies>
                <dependency>
                    <groupId>fish.payara.distributions</groupId>
                    <artifactId>${payara.artifact}</artifactId>
                    <type>zip</type>
                </dependency>

                <dependency>
                    <groupId>fish.payara.arquillian</groupId>
                    <artifactId>arquillian-payara-server-managed</artifactId>
                    <version>${payara.arquillian.version}</version>
                    <scope>test</scope>
                </dependency>
            </dependencies>

            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>unpack-server</id>
                                <goals>
                                    <goal>unpack</goal>
                                </goals>
                                <phase>pre-integration-test</phase>
                                <inherited>false</inherited>
                                <configuration>
                                    <skip>${skipConfig}</skip>
                                    <artifactItems>
                                        <artifactItem>
                                            <groupId>fish.payara.distributions</groupId>
                                            <artifactId>${payara.artifact}</artifactId>
                                            <version>${payara.version}</version>
                                            <type>zip</type>
                                            <overWrite>true</overWrite>
                                            <outputDirectory>${maven.multiModuleProjectDirectory}${file.separator}target</outputDirectory>
                                        </artifactItem>
                                    </artifactItems>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>windows</id>
            <activation>
                <os>
                    <family>Windows</family>
                </os>
            </activation>
            <properties>
                <path.separator>;</path.separator>
                <root.tmp.directory>C:</root.tmp.directory>
                <executable.extension>.exe</executable.extension>
                <script.extension>.bat</script.extension>
                <ant.executable>${ant.home}${file.separator}bin${file.separator}ant.cmd</ant.executable>
                <maven.executable>${env.MAVEN_HOME}${file.separator}bin${file.separator}mvn.cmd</maven.executable>
            </properties>
        </profile>
    </profiles>
</project>
