<?xml version="1.0" encoding="UTF-8"?>
<!--
    Copyright (c) 2025 Contributors to the Eclipse Foundation.
    This program and the accompanying materials are made available under the
    terms of the Eclipse Public License v. 2.0, which is available at
    http://www.eclipse.org/legal/epl-2.0.

    This Source Code may also be made available under the following Secondary
    Licenses when the conditions for such availability set forth in the
    Eclipse Public License v. 2.0 are satisfied: GNU General Public License,
    version 2 with the GNU Classpath Exception, which is available at
    https://www.gnu.org/software/classpath/license.html.

    SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
-->
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>fish.payara.jakarta.tests.tck</groupId>
        <artifactId>tck</artifactId>
        <version>1.0-SNAPSHOT</version>
    </parent>

    <artifactId>signature-tck-runner</artifactId>
    <version>1.0-SNAPSHOT</version>
    <name>GlassFish: Jakarta EE Signature TCK Runner</name>

    <properties>


        <!-- Remnants from ancient TCK -->
        <webServerHost>localhost</webServerHost>
        <webServerPort>8080</webServerPort>

        <!-- Properties set in the JTE file -->
        <base.tck.dir>${project.build.directory}/jakartaee</base.tck.dir>
        <bin.dir>${base.tck.dir}/com/sun/ts/tests/signaturetest/signature-repository</bin.dir>

        <!-- Note that currently, this must have src as the first directory as it is hard-coded in the test -->
        <signature.file.dir>${base.tck.dir}/src</signature.file.dir>

    </properties>

    <!-- Import the tck relevant boms -->
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>fish.payara.api</groupId>
                <artifactId>payara-bom</artifactId>
                <version>${payara.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <dependency>
                <groupId>jakarta.tck</groupId>
                <artifactId>artifacts-bom</artifactId>
                <version>${jakarta.tck.platform.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <groupId>jakarta.tck</groupId>
            <artifactId>signaturevalidation</artifactId>
        </dependency>

        <dependency>
            <groupId>jakarta.tck</groupId>
            <artifactId>signaturetest</artifactId>
        </dependency>
        <dependency>
            <groupId>jakarta.tck</groupId>
            <artifactId>sigtest-maven-plugin</artifactId>
        </dependency>

        <!-- Jakarta TCK tools dependencies -->

        <dependency>
            <groupId>jakarta.tck.arquillian</groupId>
            <artifactId>arquillian-protocol-javatest</artifactId>
        </dependency>
        <dependency>
            <groupId>jakarta.tck.arquillian</groupId>
            <artifactId>arquillian-protocol-appclient</artifactId>
        </dependency>

        <dependency>
            <groupId>jakarta.tck.arquillian</groupId>
            <artifactId>tck-porting-lib</artifactId>
        </dependency>
        <dependency>
            <groupId>jakarta.tck.arquillian</groupId>
            <artifactId>arquillian-protocol-lib</artifactId>
        </dependency>

        <dependency>
            <groupId>org.jboss.arquillian.junit5</groupId>
            <artifactId>arquillian-junit5-container</artifactId>
        </dependency>
        <dependency>
            <groupId>org.jboss.shrinkwrap</groupId>
            <artifactId>shrinkwrap-api</artifactId>
        </dependency>

    </dependencies>

    <build>
        <testResources>
            <testResource>
                <directory>src/test/resources</directory>
                <filtering>true</filtering>
                <includes>
                    <include>arquillian.xml</include>
                    <include>ts.jte</include>
                </includes>
            </testResource>
        </testResources>

        <plugins>



            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <release>17</release>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>

                    <execution>
                        <id>copy-protocol-lib</id>
                        <goals>
                            <goal>copy</goal>
                        </goals>
                        <phase>generate-resources</phase>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>jakarta.tck.arquillian</groupId>
                                    <artifactId>arquillian-protocol-lib</artifactId>
                                     <version>${jakarta.tck.arquillian.version}</version>
                                    <type>jar</type>
                                    <overWrite>true</overWrite>
                                    <outputDirectory>${project.build.directory}/protocol</outputDirectory>
                                    <destFileName>protocol.jar</destFileName>
                                </artifactItem>
                            </artifactItems>
                        </configuration>
                    </execution>

                    <execution>
                        <id>extract-sigtest-files</id>
                        <phase>process-test-resources</phase>
                        <goals>
                            <goal>unpack</goal>
                        </goals>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>jakarta.tck</groupId>
                                    <artifactId>signaturevalidation</artifactId>
                                    <version>${jakarta.tck.platform.version}</version>
                                    <overWrite>true</overWrite>
                                    <outputDirectory>${base.tck.dir}</outputDirectory>
                                    <includes>**/sig-test.map,**/sig-test-pkg-list.txt</includes>
                                </artifactItem>
                                <artifactItem>
                                    <groupId>jakarta.tck</groupId>
                                    <artifactId>signaturevalidation</artifactId>
                                    <version>${jakarta.tck.platform.version}</version>
                                    <overWrite>true</overWrite>
                                    <outputDirectory>${signature.file.dir}</outputDirectory>
                                    <includes>**/*.sig</includes>
                                </artifactItem>
                            </artifactItems>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <artifactId>maven-antrun-plugin</artifactId>
                <executions>
                    <execution>
                        <id>configure-client-classpath</id>
                        <phase>generate-test-resources</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <!-- Export the properties defined below so they can be used for the signature tests -->
                            <exportAntProperties>true</exportAntProperties>
                            <target>
                                <fileset id="jakarta-api-jars" dir="${payara.home}/glassfish/modules/">
                                    <!-- Jakarta API's needed on the test class path -->
                                    <include name="jakarta.*"/>
                                </fileset>

                                <pathconvert pathsep="," property="jakarta.api.jars" refid="jakarta-api-jars"/>
                                <pathconvert pathsep="${path.separator}" property="sigTestClasspath" refid="jakarta-api-jars"/>
                            </target>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <artifactId>maven-failsafe-plugin</artifactId>
                <configuration>
                    <dependenciesToScan>
                        <dependency>jakarta.tck:signaturevalidation</dependency>
                    </dependenciesToScan>
                </configuration>
                <executions>
                    <execution>
                        <id>signaturevalidation-${tck.profile}</id>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                        <configuration>
                            <includes>
                                <include>**/*Test</include>
                            </includes>

                            <groups>${tck.profile}</groups>
                            <additionalClasspathElements>
                                <!-- Include the libraries from the server on the test class path -->
                                <!--suppress MavenModelInspection -->
                                <additionalClasspathElement>${jakarta.api.jars}</additionalClasspathElement>
                            </additionalClasspathElements>

                            <systemPropertyVariables>
                                <payara.home>${payara.home}</payara.home>
                            </systemPropertyVariables>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>full</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <testGroups>platform</testGroups>
                <tck.profile>${testGroups}</tck.profile>
                <javaee.level>platform</javaee.level>
            </properties>
        </profile>
        <profile>
            <id>web</id>
            <properties>
                <testGroups>web</testGroups>
                <tck.profile>${testGroups}</tck.profile>
                <javaee.level>web</javaee.level>
                <optional.tech.packages.to.ignore>jakarta.resource,jakarta.resource.cci,jakarta.resource.spi,jakarta.resource.spi.work,jakarta.resource.spi.endpoint,jakarta.resource.spi.security,jakarta.mail,jakarta.mail.event,jakarta.mail,jakarta.mail.event,jakarta.mail.internet,jakarta.mail.search,jakarta.mail.util,jakarta.security.jacc,jakarta.security.auth.message,jakarta.security.auth.message.callback,jakarta.security.auth.message.config,jakarta.security.auth.message.module</optional.tech.packages.to.ignore>
            </properties>
        </profile>
    </profiles>
</project>
