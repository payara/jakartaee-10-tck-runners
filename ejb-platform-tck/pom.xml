<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>fish.payara.jakarta.tests.tck</groupId>
        <artifactId>tck</artifactId>
        <version>1.0-SNAPSHOT</version>
    </parent>

    <artifactId>ejb-platform-tck</artifactId>

    <properties>
        <ts.home>${basedir}${file.separator}src${file.separator}test${file.separator}resources${file.separator}jakartaeetck</ts.home>
        <tck.jte.path>${ts.home}${file.separator}bin${file.separator}ts.jte</tck.jte.path>

        <groups>platform</groups>

        <!--
            Property used to configure skipping the creation of JMS resources, as these aren't a part of Web Profile.
            The 'web' profile defined below will set this to true. Defaults to the value of skipConfig (false).
        -->
        <skipCreatingJms>${skipConfig}</skipCreatingJms>

        <!-- Properties used for skipping parts of the TCK -->
        <skipEjb30>${skipTests}</skipEjb30>
        <skipEjb32>${skipTests}</skipEjb32>

        <whitebox.directory>${project.build.directory}${file.separator}whiteboxes</whitebox.directory>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>fish.payara.api</groupId>
                <artifactId>payara-bom</artifactId>
                <version>${payara.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <!-- Jakarta EE APIs -->
        <dependency>
            <groupId>jakarta.ejb</groupId>
            <artifactId>jakarta.ejb-api</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>jakarta.enterprise</groupId>
            <artifactId>jakarta.enterprise.cdi-api</artifactId>
        </dependency>
        <dependency>
            <groupId>jakarta.inject</groupId>
            <artifactId>jakarta.inject-api</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>jakarta.servlet</groupId>
            <artifactId>jakarta.servlet-api</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- The actual TCK containing the tests -->
        <dependency>
            <groupId>jakarta.tck</groupId>
            <artifactId>ejb30</artifactId>
            <version>${jakarta.tck.platform.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>jakarta.tck</groupId>
            <artifactId>ejb32</artifactId>
            <version>${jakarta.tck.platform.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>jakarta.tck.arquillian</groupId>
            <artifactId>arquillian-protocol-appclient</artifactId>
            <version>${jakarta.tck.arquillian.version}</version>
        </dependency>
        <dependency>
            <groupId>jakarta.tck.arquillian</groupId>
            <artifactId>arquillian-protocol-javatest</artifactId>
            <version>${jakarta.tck.arquillian.version}</version>
        </dependency>
        <dependency>
            <groupId>jakarta.tck.arquillian</groupId>
            <artifactId>tck-porting-lib</artifactId>
            <version>${jakarta.tck.arquillian.version}</version>
        </dependency>
        <dependency>
            <groupId>jakarta.tck.arquillian</groupId>
            <artifactId>arquillian-protocol-lib</artifactId>
            <version>${jakarta.tck.arquillian.version}</version>
        </dependency>

        <!-- Junit5 -->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.platform</groupId>
            <artifactId>junit-platform-reporting</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.jboss.arquillian.junit5</groupId>
            <artifactId>arquillian-junit5-container</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.arquillian.container</groupId>
            <artifactId>arquillian-container-spi</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.jboss.shrinkwrap.descriptors</groupId>
            <artifactId>shrinkwrap-descriptors-impl-base</artifactId>
        </dependency>
        <dependency>
            <groupId>org.jboss.shrinkwrap.resolver</groupId>
            <artifactId>shrinkwrap-resolver-impl-maven</artifactId>
        </dependency>

        <dependency>
            <groupId>org.yaml</groupId>
            <artifactId>snakeyaml</artifactId>
            <scope>test</scope>
        </dependency>

        <!--
           For a couple of tests like:
           com.sun.ts.tests.ejb30.tx.session.stateful.web.ClientTest
           com.sun.ts.tests.ejb30.tx.session.stateless.cm.generics.ClientTest
           com.sun.ts.tests.ejb30.tx.session.stateless.cm.inheritance.annotated.ClientTest
           ...
        -->
        <dependency>
            <groupId>commons-httpclient</groupId>
            <artifactId>commons-httpclient</artifactId>
            <version>3.1</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>commons-codec</groupId>
            <artifactId>commons-codec</artifactId>
            <version>${commons-codec.version}</version>
        </dependency>

        <dependency>
            <groupId>jakarta.tck</groupId>
            <artifactId>whitebox</artifactId>
            <version>${jakarta.tck.platform.version}</version>
        </dependency>
        <dependency>
            <groupId>jakarta.tck</groupId>
            <artifactId>whitebox-tx</artifactId>
            <version>${jakarta.tck.platform.version}</version>
            <type>rar</type>
        </dependency>
    </dependencies>

    <build>
        <!-- Filter test resources -->
        <testResources>
            <testResource>
                <filtering>true</filtering>
                <directory>src/test/resources</directory>
                <excludes>
                    <exclude>**/cts_cert</exclude>
                </excludes>
            </testResource>
        </testResources>

        <plugins>
            <plugin>
                <groupId>com.googlecode.maven-download-plugin</groupId>
                <artifactId>download-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>download-derby</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>wget</goal>
                        </goals>
                        <configuration>
                            <skip>${skipConfig}</skip>
                            <url>${derby.zip.url}</url>
                            <unpack>true</unpack>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>install-whitebox</id>
                        <goals>
                            <goal>copy</goal>
                        </goals>
                        <phase>process-test-resources</phase>
                        <configuration>
                            <skip>${skipConfig}</skip>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>jakarta.tck.arquillian</groupId>
                                    <artifactId>arquillian-protocol-lib</artifactId>
                                    <type>jar</type>
                                    <overWrite>true</overWrite>
                                    <outputDirectory>${payara.home}${file.separator}glassfish${file.separator}lib</outputDirectory>
                                    <destFileName>arquillian-protocol-lib.jar</destFileName>
                                </artifactItem>
                                <artifactItem>
                                    <groupId>jakarta.tck.arquillian</groupId>
                                    <artifactId>arquillian-protocol-lib</artifactId>
                                    <type>jar</type>
                                    <overWrite>true</overWrite>
                                    <outputDirectory>${project.build.directory}${file.separator}protocol</outputDirectory>
                                    <destFileName>protocol.jar</destFileName>
                                </artifactItem>
                                <artifactItem>
                                    <groupId>jakarta.tck</groupId>
                                    <artifactId>whitebox</artifactId>
                                    <outputDirectory>${payara.home}${file.separator}glassfish${file.separator}lib</outputDirectory>
                                    <destFileName>whitebox.jar</destFileName>
                                </artifactItem>
                                <artifactItem>
                                    <groupId>jakarta.tck</groupId>
                                    <artifactId>whitebox-tx</artifactId>
                                    <type>rar</type>
                                    <outputDirectory>${whitebox.directory}</outputDirectory>
                                    <destFileName>whitebox-tx.rar</destFileName>
                                </artifactItem>
                            </artifactItems>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy-derby-to-payara</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <skip>${skipConfig}</skip>
                            <target>
                                <move todir="${payara.db.home}">
                                    <fileset dir="${db.download.location}" />
                                </move>
                                <copy file="${payara.db.home}${file.separator}lib${file.separator}derbytools.jar" todir="${payara.home}${file.separator}glassfish${file.separator}domains${file.separator}domain1${file.separator}lib"/>
                                <copy file="${payara.db.home}${file.separator}lib${file.separator}derbyclient.jar" todir="${payara.home}${file.separator}glassfish${file.separator}domains${file.separator}domain1${file.separator}lib"/>
                                <copy file="${payara.db.home}${file.separator}lib${file.separator}derbyshared.jar" todir="${payara.home}${file.separator}glassfish${file.separator}domains${file.separator}domain1${file.separator}lib"/>
                            </target>
                        </configuration>
                    </execution>

                    <execution>
                        <id>start-database</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <skip>${skipConfig}</skip>
                            <target>
                                <exec executable="${payara.db.home}${file.separator}bin${file.separator}startNetworkServer${script.extension}" spawn="true" dir="${payara.db.home}"/>
                                <echo message="Waiting 3 seconds for database in forked process to start..."/>
                                <sleep seconds="3"/>
                            </target>
                        </configuration>
                    </execution>

                    <execution>
                        <id>execute-ddl</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <skip>${skipConfig}</skip>
                            <target>
                                <exec executable="${payara.db.home}${file.separator}bin${file.separator}ij${script.extension}" dir="${payara.db.home}">
                                    <arg value="${basedir}${file.separator}src${file.separator}test${file.separator}resources${file.separator}derby.ddl.sql" />
                                </exec>
                            </target>
                        </configuration>
                    </execution>

                    <execution>
                        <id>stop-database</id>
                        <phase>post-integration-test</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <skip>${skipConfig}</skip>
                            <target>
                                <exec executable="${payara.db.home}${file.separator}bin${file.separator}stopNetworkServer${script.extension}" dir="${payara.db.home}"/>
                            </target>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>start-payara-server-for-config</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <skip>${skipServerStartStop}</skip>
                            <executable>${payara.asadmin}</executable>
                            <arguments>
                                <argument>start-domain</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>enable-http-trace</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <skip>${skipConfig}</skip>
                            <executable>${payara.asadmin}</executable>
                            <arguments>
                                <argument>set</argument>
                                <argument>server-config.network-config.protocols.protocol.http-listener-1.http.trace-enabled=true</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>disable-substitution</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <skip>${skipConfig}</skip>
                            <executable>${payara.asadmin}</executable>
                            <arguments>
                                <argument>create-jvm-option</argument>
                                <argument>-Dfish.payara.substitution.disable=true</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>create-derby-xa-pool</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <skip>${skipConfig}</skip>
                            <executable>${payara.asadmin}</executable>
                            <arguments>
                                <argument>create-jdbc-connection-pool</argument>
                                <argument>--restype</argument>
                                <argument>javax.sql.XADataSource</argument>
                                <argument>--datasourceclassname</argument>
                                <argument>org.apache.derby.jdbc.ClientXADataSource</argument>
                                <argument>--property</argument>
                                <argument>databaseName=derbyDB:serverName=localhost:portNumber=1527:user=cts1:password=cts1</argument>
                                <argument>cts-derby-XA-pool</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>create-derby-pool</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <skip>${skipConfig}</skip>
                            <executable>${payara.asadmin}</executable>
                            <arguments>
                                <argument>create-jdbc-connection-pool</argument>
                                <argument>--restype</argument>
                                <argument>javax.sql.DataSource</argument>
                                <argument>--datasourceclassname</argument>
                                <argument>org.apache.derby.jdbc.ClientDataSource</argument>
                                <argument>--property</argument>
                                <argument>databaseName=derbyDB:serverName=localhost:portNumber=1527:user=cts1:password=cts1</argument>
                                <argument>cts-derby-pool</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>create-DBTimer-resource</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <skip>${skipConfig}</skip>
                            <executable>${payara.asadmin}</executable>
                            <arguments>
                                <argument>create-jdbc-resource</argument>
                                <argument>--connectionpoolid</argument>
                                <argument>cts-derby-XA-pool</argument>
                                <argument>jdbc/DBTimer</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>create-DB1-resource</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <skip>${skipConfig}</skip>
                            <executable>${payara.asadmin}</executable>
                            <arguments>
                                <argument>create-jdbc-resource</argument>
                                <argument>--connectionpoolid</argument>
                                <argument>cts-derby-pool</argument>
                                <argument>jdbc/DB1</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>create-DB_no_tx-resource</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <skip>${skipConfig}</skip>
                            <executable>${payara.asadmin}</executable>
                            <arguments>
                                <argument>create-jdbc-resource</argument>
                                <argument>--connectionpoolid</argument>
                                <argument>cts-derby-pool</argument>
                                <argument>jdbc/DB_no_tx</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>create-queue-connection-factory-jms-resource</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <skip>${skipCreatingJms}</skip>
                            <executable>${payara.asadmin}</executable>
                            <arguments>
                                <argument>create-jms-resource</argument>
                                <argument>--restype</argument>
                                <argument>jakarta.jms.QueueConnectionFactory</argument>
                                <argument>jms/QueueConnectionFactory</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>create-topic-connection-factory-jms-resource</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <skip>${skipCreatingJms}</skip>
                            <executable>${payara.asadmin}</executable>
                            <arguments>
                                <argument>create-jms-resource</argument>
                                <argument>--restype</argument>
                                <argument>jakarta.jms.TopicConnectionFactory</argument>
                                <argument>jms/TopicConnectionFactory</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>create-durable-connection-factory-jms-resource</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <skip>${skipCreatingJms}</skip>
                            <executable>${payara.asadmin}</executable>
                            <arguments>
                                <argument>create-jms-resource</argument>
                                <argument>--restype</argument>
                                <argument>jakarta.jms.TopicConnectionFactory</argument>
                                <argument>jms/DURABLE_SUB_CONNECTION_FACTORY</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>create-my_queue-jms-resource</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <skip>${skipCreatingJms}</skip>
                            <executable>${payara.asadmin}</executable>
                            <arguments>
                                <argument>create-jms-resource</argument>
                                <argument>--restype</argument>
                                <argument>jakarta.jms.Queue</argument>
                                <argument>--property</argument>
                                <argument>imqDestinationName=MY_QUEUE</argument>
                                <argument>MY_QUEUE</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>create-mdb_queue-jms-resource</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <skip>${skipCreatingJms}</skip>
                            <executable>${payara.asadmin}</executable>
                            <arguments>
                                <argument>create-jms-resource</argument>
                                <argument>--restype</argument>
                                <argument>jakarta.jms.Queue</argument>
                                <argument>--property</argument>
                                <argument>imqDestinationName=MDB_QUEUE</argument>
                                <argument>MDB_QUEUE</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>create-mdb_queue_reply-jms-resource</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <skip>${skipCreatingJms}</skip>
                            <executable>${payara.asadmin}</executable>
                            <arguments>
                                <argument>create-jms-resource</argument>
                                <argument>--restype</argument>
                                <argument>jakarta.jms.Queue</argument>
                                <argument>--property</argument>
                                <argument>imqDestinationName=MDB_QUEUE_REPLY</argument>
                                <argument>MDB_QUEUE_REPLY</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>create-my_topic-jms-resource</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <skip>${skipCreatingJms}</skip>
                            <executable>${payara.asadmin}</executable>
                            <arguments>
                                <argument>create-jms-resource</argument>
                                <argument>--restype</argument>
                                <argument>jakarta.jms.Topic</argument>
                                <argument>--property</argument>
                                <argument>imqDestinationName=MY_TOPIC</argument>
                                <argument>MY_TOPIC</argument>
                            </arguments>
                        </configuration>
                    </execution>

                    <execution>
                        <id>deploy-whitebox-tx-rar</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <skip>${skipConfig}</skip>
                            <executable>${payara.asadmin}</executable>
                            <arguments>
                                <argument>deploy</argument>
                                <argument>${whitebox.directory}${file.separator}whitebox-tx.rar</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>create-connector-connection-pool</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <skip>${skipConfig}</skip>
                            <executable>${payara.asadmin}</executable>
                            <arguments>
                                <argument>create-connector-connection-pool</argument>
                                <argument>--raname</argument>
                                <argument>whitebox-tx</argument>
                                <argument>--property</argument>
                                <argument>eisPrincipalName=j2ee:userName=j2ee:password=j2ee:TSRValue=comp/TransactionSynchronizationRegistry</argument>
                                <argument>--connectiondefinition</argument>
                                <argument>com.sun.ts.tests.common.connector.whitebox.TSConnectionFactory</argument>
                                <argument>cts-connector-pool-whitebox-tx-pool.rar</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>create-connector-resource</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <skip>${skipConfig}</skip>
                            <executable>${payara.asadmin}</executable>
                            <arguments>
                                <argument>create-connector-resource</argument>
                                <argument>--poolname</argument>
                                <argument>cts-connector-pool-whitebox-tx-pool.rar</argument>
                                <argument>eis/whitebox-tx</argument>
                            </arguments>
                        </configuration>
                    </execution>

                    <execution>
                        <id>create-custom-dog-resource</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <skip>${skipConfig}</skip>
                            <executable>${payara.asadmin}</executable>
                            <arguments>
                                <argument>create-custom-resource</argument>
                                <argument>--restype</argument>
                                <argument>com.sun.ts.lib.deliverable.cts.resource.Dog</argument>
                                <argument>--factoryclass</argument>
                                <argument>com.sun.ts.lib.deliverable.cts.resource.DogFactory</argument>
                                <argument>custom/dog</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>create-custom-webServerURL-resource</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <skip>${skipConfig}</skip>
                            <executable>${payara.asadmin}</executable>
                            <arguments>
                                <argument>create-custom-resource</argument>
                                <argument>--restype</argument>
                                <argument>java.net.URL</argument>
                                <argument>--factoryclass</argument>
                                <argument>org.glassfish.resources.custom.factory.URLObjectFactory</argument>
                                <argument>--property</argument>
                                <argument>spec=http\://localhost\:8080</argument>
                                <argument>webServerURL</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>create-custom-webServerMdbtestURL-resource</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <skip>${skipConfig}</skip>
                            <executable>${payara.asadmin}</executable>
                            <arguments>
                                <argument>create-custom-resource</argument>
                                <argument>--restype</argument>
                                <argument>java.net.URL</argument>
                                <argument>--factoryclass</argument>
                                <argument>org.glassfish.resources.custom.factory.URLObjectFactory</argument>
                                <argument>--property</argument>
                                <argument>spec=http\://localhost\:8080/mdbdest/TestServlet</argument>
                                <argument>webServerMdbtestURL</argument>
                            </arguments>
                        </configuration>
                    </execution>


                    <execution>
                        <id>stop-payara-server-after-config</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <skip>${skipServerStartStop}</skip>
                            <executable>${payara.asadmin}</executable>
                            <arguments>
                                <argument>stop-domain</argument>
                            </arguments>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <configuration>
                    <nonFilteredFileExtensions>
                        <nonFilteredFileExtension>jks</nonFilteredFileExtension>
                        <nonFilteredFileExtension>p12</nonFilteredFileExtension>
                        <nonFilteredFileExtension>cer</nonFilteredFileExtension>
                        <nonFilteredFileExtension>keystore</nonFilteredFileExtension>
                        <nonFilteredFileExtension>cts_cert</nonFilteredFileExtension>
                    </nonFilteredFileExtensions>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <configuration>
                    <includes>
                        <include>**/*Test.java</include>
                        <include>**/*TestCase.java</include>
                        <include>**/*TestSuite.java</include>
                    </includes>

                    <systemPropertyVariables>
                        <payara.home>${payara.home}</payara.home>
                        <payara.httpPort>8080</payara.httpPort>
                        <arquillian.xml>arquillian.xml</arquillian.xml>
                        <ts.home>${ts.home}</ts.home>
                        <ts.work.dir>${project.build.directory}</ts.work.dir>
                    </systemPropertyVariables>
                </configuration>

                <executions>
                    <execution>
                        <id>ejb-30</id>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                        <configuration>
                            <skip>${skipEjb30}</skip>
                            <dependenciesToScan>jakarta.tck:ejb30</dependenciesToScan>
                            <groups>${groups}</groups>
                        </configuration>
                    </execution>
                    <execution>
                        <id>ejb-32</id>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                        <configuration>
                            <skip>${skipEjb32}</skip>
                            <dependenciesToScan>jakarta.tck:ejb32</dependenciesToScan>
                            <groups>${groups}</groups>
                        </configuration>
                    </execution>

                </executions>
            </plugin>
        </plugins>
    </build>

    <reporting>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-report-plugin</artifactId>
                <configuration>
                    <outputName>jakartaee-report</outputName>
                </configuration>
            </plugin>
        </plugins>
    </reporting>

    <profiles>
        <profile>
            <id>web</id>
            <properties>
                <groups>web</groups>
                <skipCreatingJms>true</skipCreatingJms>
            </properties>
        </profile>
    </profiles>

</project>