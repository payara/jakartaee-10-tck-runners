<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>fish.payara.jakarta.tests.tck</groupId>
        <artifactId>tck</artifactId>
        <version>1.0-SNAPSHOT</version>
    </parent>

    <artifactId>tags-tck-runner</artifactId>
    <packaging>pom</packaging>

    <name>TCK: tags</name>

    <properties>
        <derby.zip.url>https://dlcdn.apache.org//db/derby/db-derby-10.17.1.0/db-derby-10.17.1.0-bin.zip</derby.zip.url>
        <db.home>${project.build.directory}/db-derby-10.17.1.0-bin</db.home>
        <payara.toplevel.dir>payara7</payara.toplevel.dir>
        <jdbc.classpath>${payara.home}${file.separator}javadb${file.separator}lib${file.separator}derbyclient.jar:${payara.home}${file.separator}javadb${file.separator}lib${file.separator}derbyshared.jar:${payara.home}${file.separator}javadb${file.separator}lib${file.separator}derbytools.jar</jdbc.classpath>
        <db.delimiter>;</db.delimiter>
        <db.name>derby</db.name>
        <jstl.db.driver>org.apache.derby.jdbc.ClientDriver</jstl.db.driver>
        <jstl.db.name>derbyDB</jstl.db.name>
        <jstl.db.password>cts1</jstl.db.password>
        <jstl.db.port>1527</jstl.db.port>
        <jstl.db.server>localhost</jstl.db.server>
        <jstl.db.url>jdbc:derby://${jstl.db.server}:${jstl.db.port}/${jstl.db.name};create=true</jstl.db.url>
        <jstl.db.user>cts1</jstl.db.user>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>fish.payara.api</groupId>
                <artifactId>payara-bom</artifactId>
                <version>${payara.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <groupId>jakarta.tck</groupId>
            <artifactId>common</artifactId>
            <version>${jakarta.tck.common.version}</version>
        </dependency>
        <dependency>
            <groupId>jakarta.platform</groupId>
            <artifactId>jakarta.jakartaee-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>fish.payara.jakarta.tests.tck</groupId>
            <artifactId>jakarta-tags-tck</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.arquillian.junit5</groupId>
            <artifactId>arquillian-junit5-container</artifactId>
        </dependency>
        <dependency>
            <groupId>org.jboss.arquillian.container</groupId>
            <artifactId>arquillian-container-test-spi</artifactId>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>com.googlecode.maven-download-plugin</groupId>
                <artifactId>download-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>download-derby</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>wget</goal>
                        </goals>
                        <configuration>
                            <skip>${skipTests}</skip>
                            <url>${derby.zip.url}</url>
                            <unpack>true</unpack>
                            <outputDirectory>${project.build.directory}</outputDirectory>
                        </configuration>
                    </execution>
                </executions>

            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>start-payara-server-for-config</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <inherited>false</inherited>
                        <configuration>
                            <skip>${skipServerStartStop}</skip>
                            <executable>${payara.asadmin}</executable>
                            <arguments>
                                <argument>start-domain</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>create-jvm-option-1</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <inherited>false</inherited>
                        <configuration>
                            <executable>${payara.asadmin}</executable>
                            <arguments>
                                <argument>create-jvm-options</argument>
                                <argument>-Djavax.xml.accessExternalStylesheet=all</argument>
                            </arguments>
                            <successCodes>
                                <successCode>0</successCode>
                                <successCode>1</successCode>
                            </successCodes>
                        </configuration>
                    </execution>
                    <execution>
                        <id>create-jvm-option-2</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <inherited>false</inherited>
                        <configuration>
                            <executable>${payara.asadmin}</executable>
                            <arguments>
                                <argument>create-jvm-options</argument>
                                <argument>-Djavax.xml.accessExternalSchema=all</argument>
                            </arguments>
                            <successCodes>
                                <successCode>0</successCode>
                                <successCode>1</successCode>
                            </successCodes>
                        </configuration>
                    </execution>
                    <execution>
                        <id>create-jvm-option-3</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <inherited>false</inherited>
                        <configuration>
                            <executable>${payara.asadmin}</executable>
                            <arguments>
                                <argument>create-jvm-options</argument>
                                <argument>-Djavax.xml.accessExternalDTD=file,http</argument>
                            </arguments>
                            <successCodes>
                                <successCode>0</successCode>
                                <successCode>1</successCode>
                            </successCodes>
                        </configuration>
                    </execution>
                    <execution>
                        <id>stop-payara-server-after-config</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <inherited>false</inherited>
                        <configuration>
                            <skip>${skipServerStartStop}</skip>
                            <executable>${payara.asadmin}</executable>
                            <arguments>
                                <argument>stop-domain</argument>
                            </arguments>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <executions>
                    <execution>
                        <id>start-database</id>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <phase>package</phase>
                        <configuration>
                            <skip>${skipTests}</skip>
                            <target>
                                <move todir="${payara.home}${file.separator}javadb">
                                    <fileset dir="${db.home}" />
                                </move>
                                <exec executable="${payara.home}${file.separator}javadb${file.separator}bin${file.separator}startNetworkServer" dir="${project.build.directory}" spawn="true" >
                                    <arg value="-noSecurityManager" />
                                </exec>
                            </target>
                        </configuration>
                    </execution>
                    <execution>
                        <id>initialise-database</id>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <phase>integration-test</phase>

                        <configuration>
                            <skip>${skipTests}</skip>
                            <target>
                                <copy file="${payara.home}${file.separator}javadb${file.separator}lib${file.separator}derbytools.jar" todir="${payara.home}${file.separator}glassfish${file.separator}domains${file.separator}domain1${file.separator}lib"/>
                                <copy file="${payara.home}${file.separator}javadb${file.separator}lib${file.separator}derbyclient.jar" todir="${payara.home}${file.separator}glassfish${file.separator}domains${file.separator}domain1${file.separator}lib"/>
                                <copy file="${payara.home}${file.separator}javadb${file.separator}lib${file.separator}derbyshared.jar" todir="${payara.home}${file.separator}glassfish${file.separator}domains${file.separator}domain1${file.separator}lib"/>

                                <sql autocommit="true" classpath="${jdbc.classpath}" delimiter="${db.delimiter}" driver="${jstl.db.driver}" onerror="continue" password="${jstl.db.password}" url="${jstl.db.url}" userid="${jstl.db.user}">
                                    <transaction src="${project.build.directory}${file.separator}..${file.separator}sql${file.separator}${db.name}${file.separator}${db.name}.ddl.jstl.sql"/>
                                </sql>
                            </target>
                        </configuration>
                    </execution>
                    <execution>
                        <id>stop-database</id>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <phase>post-integration-test</phase>
                        <configuration>
                            <skip>${skipTests}</skip>
                            <target>
                                <exec executable="${payara.home}${file.separator}javadb${file.separator}bin${file.separator}stopNetworkServer" dir="${project.build.directory}" />
                            </target>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-failsafe-plugin</artifactId>
                <executions>
                    <execution>
                        <id>tests</id>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                        <configuration>
                            <skip>${skipTests}</skip>
                            <dependenciesToScan>fish.payara.jakarta.tests.tck:jakarta-tags-tck</dependenciesToScan>
                            <systemPropertyVariables>
                                <payara.home>${payara.home}</payara.home>
                                <impl.vi>payara</impl.vi>
                                <impl.vi.deploy.dir>${payara.home}${file.separator}domains${file.separator}domain1${file.separator}autodeploy</impl.vi.deploy.dir>
                                <junit.log.traceflag>true</junit.log.traceflag>
                                <jstl.db.name>derbyDB</jstl.db.name>
                                <jstl.db.server>localhost</jstl.db.server>
                                <jstl.db.port>1527</jstl.db.port>
                                <jstl.db.url>jdbc:derby://${jstl.db.server}:${jstl.db.port}/${jstl.db.name};create=true</jstl.db.url>
                                <jstl.db.driver>org.apache.derby.jdbc.ClientDriver</jstl.db.driver>
                                <jstl.db.user>cts1</jstl.db.user>
                                <jstl.db.password>cts1</jstl.db.password>
                                <harness.log.traceflag>true</harness.log.traceflag>
                                <cts.harness.debug>true</cts.harness.debug>
                            </systemPropertyVariables>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
