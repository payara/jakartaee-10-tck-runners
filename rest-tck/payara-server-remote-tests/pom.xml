<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <groupId>fish.payara.jakarta.tests.tck</groupId>
        <artifactId>rest-tck</artifactId>
        <version>1.0-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>rest-tck-payara-server-remote-tests</artifactId>

    <properties>
        <jimage.dir>${project.build.directory}${file.separator}jdk-bundle</jimage.dir>
    </properties>

    <dependencies>
        <!-- ../tck-download/jakarta-rest-tck installs TCK artifacts -->
        <dependency>
            <groupId>jakarta.ws.rs</groupId>
            <artifactId>jakarta-restful-ws-tck</artifactId>
            <version>${jakarta-rest-tck.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>fish.payara.arquillian</groupId>
            <artifactId>arquillian-payara-server-remote</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- tests run client-side and therefore need jersey on test classpath as well -->
        <dependency>
            <groupId>org.glassfish.jersey.core</groupId>
            <artifactId>jersey-client</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.glassfish.jersey.inject</groupId>
            <artifactId>jersey-hk2</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.glassfish.jersey.media</groupId>
            <artifactId>jersey-media-json-binding</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.media</groupId>
            <artifactId>jersey-media-jaxb</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.media</groupId>
            <artifactId>jersey-media-sse</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.media</groupId>
            <artifactId>jersey-media-multipart</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.jboss.arquillian.junit5</groupId>
            <artifactId>arquillian-junit5-container</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.jboss.arquillian.protocol</groupId>
            <artifactId>arquillian-protocol-servlet</artifactId>
        </dependency>

        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>commons-httpclient</groupId>
            <artifactId>commons-httpclient</artifactId>
            <version>3.1</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.netbeans.tools</groupId>
            <artifactId>sigtest-maven-plugin</artifactId>
        </dependency>
        
        <!-- TCK runtime dependencies -->

        <dependency>
            <groupId>com.sun.xml.bind</groupId>
            <artifactId>jaxb-impl</artifactId>
            <version>4.0.4.payara-p1</version>
            <scope>runtime</scope>
        </dependency>

    </dependencies>

    <build>
        <plugins>

            <plugin>
                <artifactId>exec-maven-plugin</artifactId>
                <groupId>org.codehaus.mojo</groupId>
                <executions>
                    <execution>
                        <id>Enable Trace requests</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>${payara.asadmin}</executable>
                            <arguments>
                                <argument>set</argument>
                                <argument>server-config.network-config.protocols.protocol.http-listener-1.http.trace-enabled=true</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>Delete User j2ee</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>${payara.asadmin}</executable>
                            <arguments>
                                <argument>--passwordfile</argument>
                                <argument>${project.basedir}/j2ee.pass</argument>
                                <argument>delete-file-user</argument>
                                <argument>j2ee</argument>
                            </arguments>
                            <successCodes>
                                <successCode>0</successCode>
                                <successCode>1</successCode>
                            </successCodes>
                        </configuration>
                    </execution>
                    <execution>
                        <id>Add User j2ee</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>${payara.asadmin}</executable>
                            <arguments>
                                <argument>--passwordfile</argument>
                                <argument>${project.basedir}/j2ee.pass</argument>
                                <argument>create-file-user</argument>
                                <argument>--groups</argument>
                                <argument>staff:mgr:DIRECTOR</argument>
                                <argument>j2ee</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>Delete User javajoe</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>${payara.asadmin}</executable>
                            <arguments>
                                <argument>--passwordfile</argument>
                                <argument>${project.basedir}/javajoe.pass</argument>
                                <argument>delete-file-user</argument>
                                <argument>javajoe</argument>
                            </arguments>
                            <successCodes>
                                <successCode>0</successCode>
                                <successCode>1</successCode>
                            </successCodes>
                        </configuration>
                    </execution>
                    <execution>
                        <id>Add User javajoe</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>${payara.asadmin}</executable>
                            <arguments>
                                <argument>--passwordfile</argument>
                                <argument>${project.basedir}/javajoe.pass</argument>
                                <argument>create-file-user</argument>
                                <argument>--groups</argument>
                                <argument>guest:OTHERROLE</argument>
                                <argument>javajoe</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>list users</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>${payara.asadmin}</executable>
                            <arguments>
                                <argument>list-file-users</argument>
                            </arguments>
                        </configuration>
                    </execution>
                </executions>
            </plugin>            
            
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <executions>
                    <execution>
                        <id>payara-tests</id>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                        <configuration>
                            <excludedGroups>${excluded.groups}</excludedGroups>
                            <systemPropertyVariables>
                                <!-- credentials for the test -->
                                <user>j2ee</user>
                                <password>j2ee</password>
                                <authuser>javajoe</authuser>
                                <authpassword>javajoe</authpassword>

                                <webServerHost>${adminHost}</webServerHost>
                                <webServerPort>8080</webServerPort>
                                <cts.harness.debug>false</cts.harness.debug>
                                <porting.ts.url.class.1>ee.jakarta.tck.ws.rs.lib.implementation.sun.common.SunRIURL</porting.ts.url.class.1>

                                <jimage.dir>${jimage.dir}</jimage.dir>
                                <optional.tech.packages.to.ignore>jakarta.xml.bind</optional.tech.packages.to.ignore>
                                <signature.sigTestClasspath>${payara.home}${file.separator}glassfish${file.separator}modules${file.separator}jakarta.ws.rs-api.jar${path.separator}${payara.home}${file.separator}glassfish${file.separator}modules${file.separator}jakarta.xml.bind-api.jar${path.separator}${jimage.dir}${file.separator}java.base${path.separator}${jimage.dir}${file.separator}java.rmi${path.separator}${jimage.dir}${file.separator}java.sql${path.separator}${jimage.dir}${file.separator}java.naming</signature.sigTestClasspath>
                            </systemPropertyVariables>
                            <dependenciesToScan>jakarta.ws.rs:jakarta-restful-ws-tck</dependenciesToScan>
                            <excludes>
                                <exclude>**/SeBootstrapIT.java</exclude>
                                <exclude>ee.jakarta.tck.ws.rs.jaxrs21.ee.client.executor.rx.JAXRSClientIT</exclude>
                                <exclude>ee.jakarta.tck.ws.rs.jaxrs21.ee.client.rxinvoker.JAXRSClientIT</exclude>
                            </excludes>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

</project>
